{"version":3,"sources":["Component/Logo/Expense_Life_Cycle.png","logo.svg","Component/Logo/ex.jpg","Component/Register/Register.js","Component/Navigation/Navigation.js","Component/Home/Home.js","Component/Logo/Logo.js","Component/SignIn/SiginIn.js","Component/Services/Services.js","Component/AboutUs/AboutUs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Register","props","onChangeName","event","setState","name","target","value","onChangeEmail","email","onChangePassword","password","onChangeDesignation","designation","onChangeContact","contactNumber","onRegister","console","log","state","route","companyName","this","onRouteChange","className","id","htmlFor","onChange","type","onChangeCompanyName","onClick","React","Component","Navigation","style","display","justifyContent","Home","Logo","alt","src","Expense_Life_Cycle","Signin","onEmailChange","signInEmailChange","onPasswordChange","signInPasswordChange","onSubmitSignIn","href","Services","AboutUs","App","loadUser","data","user","company","entry","isSignedIn","Date","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,gD,uECA3CD,EAAOC,QAAU,IAA0B,kC,oDCA3CD,EAAOC,QAAU,IAA0B,gC,6GCkJxBC,G,8DA/If,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,aAAa,SAACC,GACV,EAAKC,SAAS,CAACC,KAAKF,EAAMG,OAAOC,SAblB,EAenBC,cAAc,SAACL,GACX,EAAKC,SAAS,CAACK,MAAMN,EAAMG,OAAOC,SAhBnB,EAkBnBG,iBAAiB,SAACP,GACd,EAAKC,SAAS,CAACO,SAASR,EAAMG,OAAOC,SAnBtB,EAqBnBK,oBAAoB,SAACT,GACjB,EAAKC,SAAS,CAACS,YAAYV,EAAMG,OAAOC,SAtBzB,EAwBnBO,gBAAgB,SAACX,GACb,EAAKC,SAAS,CAACW,cAAcZ,EAAMG,OAAOC,SAzB3B,EA4BnBS,WAAW,WACPC,QAAQC,IAAI,iBAAiB,EAAKC,MAAMC,QA1BxC,EAAKD,MAAQ,CACRd,KAAK,GACLI,MAAM,GACNE,SAAS,GACTU,YAAY,GACZR,YAAY,GACZE,cAAc,IATJ,E,qDAoDGO,KAAKrB,MAApBsB,cACP,OAEA,6BAASC,UAAU,4EACf,0BAAMA,UAAU,gBACZ,0BAAMA,UAAU,YACZ,8BAAUC,GAAG,UAAUD,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,QAA7C,QACA,2BACIC,SAAUL,KAAKpB,aACfsB,UAAU,qEACVI,KAAK,OACLvB,KAAK,OACLoB,GAAG,UAGX,yBAAKD,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,iBAA7C,SACA,2BACIC,SAAUL,KAAKd,cACfgB,UAAU,qEACVI,KAAK,QACLvB,KAAK,gBACLoB,GAAG,mBAKX,yBAAKD,UAAU,OACP,2BAAOA,UAAU,oBAAoBE,QAAQ,YAA7C,YACA,2BACIC,SAAUL,KAAKZ,iBACfc,UAAU,uEACVI,KAAK,WACLvB,KAAK,WACLoB,GAAG,cAGX,yBAAKD,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,eAA7C,eACA,2BACIC,SAAUL,KAAKO,oBACfL,UAAU,uEACVI,KAAK,OACLvB,KAAK,cACLoB,GAAG,iBAGf,yBAAKD,UAAU,OACP,2BAAOA,UAAU,oBAAoBE,QAAQ,eAA7C,eACA,2BACIC,SAAUL,KAAKV,oBACfY,UAAU,uEACVI,KAAK,OACLvB,KAAK,cACLoB,GAAG,iBAGf,yBAAKD,UAAU,OACf,2BAAOA,UAAU,oBAAoBE,QAAQ,iBAA7C,iBACQ,2BACIC,SAAUL,KAAKR,gBACfU,UAAU,uEACVI,KAAK,OACLvB,KAAK,gBACLoB,GAAG,oBAOpB,yBAAKD,UAAU,IACV,2BACgBM,QAASR,KAAKN,WACdQ,UAAU,uEACVI,KAAK,SACLrB,MAAM,qB,GApInBwB,IAAMC,YCmCdC,G,MAnCG,SAAC,GAAmB,IAAlBV,EAAiB,EAAjBA,cAgBjB,OACI,6BAEC,yBAAKW,MAAO,CAACC,QAAQ,OAAOC,eAAe,aACvC,uBAAGN,QAAS,kBAAIP,EAAc,SAAUC,UAAU,2CAAlD,QACA,uBAAGM,QAAS,kBAAIP,EAAc,aAAcC,UAAU,2CAAtD,YACA,uBAAGM,QAAS,kBAAIP,EAAc,YAAaC,UAAU,2CAArD,WACA,uBAAGM,QAAS,kBAAIP,EAAc,WAAYC,UAAU,2CAApD,WACA,uBAAGM,QAAS,kBAAIP,EAAc,aAAaC,UAAU,2CAArD,gBCjBGa,EAPJ,WACP,OACI,6BACI,uBAAGb,UAAU,SAAb,iD,gBCOGc,G,MATJ,WACP,OACI,6BACI,yBAAKd,UAAU,WAAWe,IAAI,qBAAqBC,IAAKC,SCsFjDC,E,kDAzFf,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IAOV0C,cAAc,SAACxC,GACX,EAAKC,SAAS,CAACwC,kBAAkBzC,EAAMG,OAAOC,SAT/B,EAanBsC,iBAAiB,SAAC1C,GACd,EAAKC,SAAS,CAAC0C,qBAAqB3C,EAAMG,OAAOC,SAdlC,EAkBnBwC,eAAe,WACX9B,QAAQC,IAAI,EAAKC,QAhBjB,EAAKA,MAAQ,CACRyB,kBAAkB,GAClBE,qBAAqB,IALX,E,qDAsCV,IACEvB,EAAeD,KAAKrB,MAApBsB,cACX,OAEA,6BAASC,UAAU,4EACf,0BAAMA,UAAU,gBACZ,0BAAMA,UAAU,YACZ,8BAAUC,GAAG,UAAUD,UAAU,6BAC7B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,iBAA7C,SACA,2BAAOC,SAAUL,KAAKqB,cAClBnB,UAAU,qEACVI,KAAK,QACLvB,KAAK,gBACLoB,GAAG,mBAGX,yBAAKD,UAAU,OACX,2BAAOA,UAAU,oBAAoBE,QAAQ,YAA7C,YACA,2BACIC,SAAUL,KAAKuB,iBACfrB,UAAU,uEACVI,KAAK,WACLvB,KAAK,WACLoB,GAAG,cAGH,2BAAOD,UAAU,8BAA6B,2BAAOI,KAAK,aAA1D,iBAEA,yBAAKJ,UAAU,IACX,2BACIM,QAASR,KAAKyB,eACdvB,UAAU,uEACVI,KAAK,SACJrB,MAAM,aAGX,yBAAKiB,UAAU,eACX,uBAAGM,QAAS,kBAAIP,EAAc,aAAaC,UAAU,gCAArD,YACA,uBAAGwB,KAAK,KAAKxB,UAAU,gCAAvB,iC,GA/EfO,IAAMC,WCUZiB,EAVA,WACX,OACI,yBAAKf,MAAO,CAACC,QAAQ,OAAOC,eAAe,eACvC,6BACI,uECMDc,EAVD,WACV,OACI,yBAAKhB,MAAO,CAACC,QAAQ,OAAOC,eAAe,eACvC,6BACI,kECsGDe,E,kDA9Fb,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAgBRmD,SAAS,SAACC,GAER,EAAKjD,SAAS,CACZkD,KAAK,CACH7B,GAAG4B,EAAK5B,GACRpB,KAAKgD,EAAKhD,KACVI,MAAM4C,EAAK5C,MACX8C,QAAQF,EAAKE,QACb1C,YAAYwC,EAAKxC,YACjBE,cAAcsC,EAAKtC,cACnByC,MAAMH,EAAKG,UA3BE,EAgCrBjC,cAAc,SAACH,GACH,UAAPA,GAAwB,YAAPA,EAElB,EAAKhB,SAAS,CAACqD,YAAW,IAEb,QAAPrC,GAEN,EAAKhB,SAAS,CAACqD,YAAW,IAI5B,EAAKrD,SAAS,CAACgB,MAAMA,IACrBH,QAAQC,IAAI,aAAe,EAAKC,MAAMC,OACtCH,QAAQC,IAAI,iBAAiBE,IA1C3B,EAAKD,MAAQ,CACXC,MAAM,OACNqC,YAAW,EACXH,KAAK,CACH7B,GAAG,GACHpB,KAAK,GACLI,MAAM,GACN8C,QAAQ,GACR1C,YAAY,GACZE,cAAc,GACdyC,MAAM,IAAIE,OAbG,E,qDAiDf,OAEG,yBAAKlC,UAAU,OAEhB,6BACA,kBAAC,EAAD,CAAYD,cAAeD,KAAKC,gBAEX,WAAnBD,KAAKH,MAAMC,MACX,kBAAC,EAAD,CAAQG,cAAeD,KAAKC,gBAE5B,6BAEuB,aAAnBD,KAAKH,MAAMC,MACX,kBAAC,EAAD,CAAUG,cAAeD,KAAKC,gBAE9B,6BAEqB,aAAnBD,KAAKH,MAAMC,MACX,kBAAC,EAAD,CAAUG,cAAeD,KAAKC,gBAEX,YAAnBD,KAAKH,MAAMC,MACX,kBAAC,EAAD,CAASG,cAAeD,KAAKC,gBAE7B,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,e,GA5EES,aCAE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3D,QAAQ2D,MAAMA,EAAMC,c","file":"static/js/main.7e4925b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Expense_Life_Cycle.ad87b8a3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ex.761eeba1.jpg\";","import React from 'react'\r\n\r\nclass Register extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:'',\r\n             email:'',\r\n             password:'',\r\n             companyName:'',\r\n             designation:'',\r\n             contactNumber:''\r\n        }\r\n    }\r\n    onChangeName=(event)=>{\r\n        this.setState({name:event.target.value})\r\n    }\r\n    onChangeEmail=(event)=>{\r\n        this.setState({email:event.target.value})\r\n    }\r\n    onChangePassword=(event)=>{\r\n        this.setState({password:event.target.value})\r\n    }\r\n    onChangeDesignation=(event)=>{\r\n        this.setState({designation:event.target.value})\r\n    }\r\n    onChangeContact=(event)=>{\r\n        this.setState({contactNumber:event.target.value})\r\n    }\r\n    \r\n    onRegister=()=>{\r\n        console.log('Changed state '+this.state.route);\r\n        /*\r\n        fetch('http://localhost:3002/register',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                name:this.state.name,\r\n                email:this.state.email,\r\n                password:this.state.password\r\n            })\r\n        }).then(Response=>Response.json())\r\n          .then(user=>{\r\n                if(user)\r\n                {   \r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home')\r\n                }\r\n                \r\n            })\r\n            */\r\n    }\r\n    \r\n    render(){\r\n    const {onRouteChange}=this.props;\r\n    return (\r\n    \r\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-6 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <form className=\"measure \">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input \r\n                            onChange={this.onChangeName}\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"text\" \r\n                            name=\"name\" \r\n                            id=\"name\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            onChange={this.onChangeEmail}\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\" \r\n                            id=\"email-address\"\r\n                        />\r\n                    </div>\r\n                      \r\n                   \r\n                    <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                onChange={this.onChangePassword} \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                id=\"password\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"CompanyName\">CompanyName</label>\r\n                            <input\r\n                                onChange={this.onChangeCompanyName} \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"comapnyName\" \r\n                                id=\"comapnyName\"\r\n                            />\r\n                        </div>\r\n                    <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"Designation\">Designation</label>\r\n                            <input\r\n                                onChange={this.onChangeDesignation} \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"designation\" \r\n                                id=\"designation\"\r\n                            />\r\n                        </div>\r\n                    <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"ContactNumber\">ContactNumber</label>\r\n                            <input\r\n                                onChange={this.onChangeContact} \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"contactNumber\" \r\n                                id=\"contactNumber\"\r\n                            />\r\n                        </div>\r\n\r\n                \r\n                </fieldset>\r\n\r\n               <div className=\"\">\r\n                    <input\r\n                                    onClick={this.onRegister}\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                                    type=\"submit\" \r\n                                    value=\"Register\"\r\n                                />\r\n                            </div>\r\n                                \r\n                        </form>\r\n                    </main>\r\n                  </article>\r\n                  \r\n            )\r\n    }\r\n                        \r\n} \r\n    export default Register;\r\n","import React from 'react';\r\nimport './Navigation.css'\r\nconst Navigation =({onRouteChange})=>{\r\n   \r\n    /*if(isSignedIn)\r\n   {\r\n    return(\r\n        <div>\r\n        <nav >\r\n        <p style={{display:'flex',justifyContent:'flex-start'}} onClick={()=>onRouteChange('home')}className='f3 link dim black underline pa3 pointer'>Home</p>        \r\n        <p style={{display:'flex',justifyContent:'flex-end'}} onClick={()=>onRouteChange('signin')}className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n    </nav>\r\n    </div>\r\n      )\r\n\r\n       \r\n   }\r\n   else{*/\r\n   return(\r\n       <div>\r\n       \r\n        <nav style={{display:'flex',justifyContent:'flex-end'}} >       \r\n            <p onClick={()=>onRouteChange('home') } className='f3 link dim black underline pa3 pointer'>Home</p>\r\n            <p onClick={()=>onRouteChange('services') } className='f3 link dim black underline pa3 pointer'>Services</p>\r\n            <p onClick={()=>onRouteChange('aboutus') } className='f3 link dim black underline pa3 pointer'>AboutUs</p>                  \r\n            <p onClick={()=>onRouteChange('signin') } className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n            <p onClick={()=>onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        \r\n\r\n        \r\n        </nav>\r\n        </div>\r\n   );\r\n   //}\r\n   \r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\nconst Home=()=>{\r\n    return(\r\n        <div>\r\n            <p className='h1 f4'>Welcome to the Automated Expanse Management</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React from 'react';\r\nimport Expense_Life_Cycle from './Expense_Life_Cycle.png'\r\nimport ex from './ex.jpg'\r\nconst Logo=()=>{\r\n    return(\r\n        <div > \r\n            <img className=\"dis w-40\" alt='Expense-Life-Cycle' src={Expense_Life_Cycle}></img> \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react'\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             signInEmailChange:'',\r\n             signInPasswordChange:''\r\n        }\r\n    }\r\n    onEmailChange=(event)=>{\r\n        this.setState({signInEmailChange:event.target.value});\r\n        //console.log(event.target.value);\r\n\r\n    }\r\n    onPasswordChange=(event)=>{\r\n        this.setState({signInPasswordChange:event.target.value});\r\n        //console.log(event.target.value);\r\n\r\n    }\r\n    onSubmitSignIn=()=>{\r\n        console.log(this.state)\r\n       // this.setState({route:})\r\n        /*fetch('http://localhost:3002/signin',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                email:this.state.signInEmailChange,\r\n                password:this.state.signInPasswordChange\r\n            })\r\n        }).then(Response=>Response.json())\r\n          .then(data=>{\r\n              if(data === 'success')\r\n              this.props.onRouteChange('home')\r\n              else\r\n              alert(`user doesn't exist`);\r\n            })\r\n          */\r\n        \r\n    }\r\n    render(){\r\n        const {onRouteChange}=this.props;\r\n    return (\r\n    \r\n    <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-6 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <form className=\"measure \">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange}\r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\" \r\n                            id=\"email-address\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            onChange={this.onPasswordChange}\r\n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            id=\"password\"\r\n                            />\r\n                        </div>\r\n                            <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\"/> Remember me</label>\r\n                        </fieldset>\r\n                            <div className=\"\">\r\n                                <input \r\n                                    onClick={this.onSubmitSignIn}\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                                    type=\"submit\"\r\n                                     value=\"Sign in\"\r\n                                />\r\n                            </div>\r\n                                <div className=\"lh-copy mt3\">\r\n                                    <p onClick={()=>onRouteChange('register')} className=\"f4 link dim black db pointer\">Register</p>\r\n                                    <a href=\"#0\" className=\"f6 link dim black db pointer\">Forgot your password?</a>\r\n                                </div>\r\n                        </form>\r\n                    </main>\r\n                  </article>\r\n                  \r\n    )\r\n    }\r\n    \r\n                        \r\n     }\r\n    export default Signin;\r\n","import React from 'react'\r\n\r\nconst Services=()=>{\r\n    return(\r\n        <div style={{display:'flex',justifyContent:'flex-start'}}>\r\n            <div>\r\n                <p>Welcome to Automated payment services</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Services;","import React from 'react'\r\n\r\nconst AboutUs=()=>{\r\n    return(\r\n        <div style={{display:'flex',justifyContent:'flex-start'}}>\r\n            <div>\r\n                <p>Welcome to know details about us</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutUs;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Register from './Component/Register/Register'\nimport Navigation from './Component/Navigation/Navigation';\nimport Home from './Component/Home/Home'\nimport Logo from './Component/Logo/Logo'\nimport Signin from './Component/SignIn/SiginIn'\nimport Services from './Component/Services/Services'\nimport AboutUs from './Component/AboutUs/AboutUs'\n\n\nclass App extends Component\n {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      route:'home',\n      isSignedIn:false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        company:'',\n        designation:'',\n        contactNumber:'',\n        entry:new Date()\n      }\n    }\n  }\n  loadUser=(data)=>{\n    //console.log(data.id);\n    this.setState({\n      user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        company:data.company,\n        designation:data.designation,\n        contactNumber:data.contactNumber,\n        entry:data.entry\n      }\n    })\n  }\n\nonRouteChange=(route)=>{\n  if(route=='signin'||route=='register')\n  {\n    this.setState({isSignedIn:false});\n  }\n  else if(route=='home')\n  {\n    this.setState({isSignedIn:true});\n\n  }\n\n  this.setState({route:route});\n  console.log(\"set value \" + this.state.route);\n  console.log(\"Given value   \"+route);\n   \n  }\n  render(){\n      return (\n    \n         <div className='App'>\n      {\n        <div>\n        <Navigation onRouteChange={this.onRouteChange} />\n        { \n          this.state.route==='signin' ?\n          <Signin onRouteChange={this.onRouteChange}/>\n          :\n          <div>\n          {\n              this.state.route==='register'?\n              <Register onRouteChange={this.onRouteChange}/>\n              :\n              <div>  \n                {\n                this.state.route==='services'?\n                <Services onRouteChange={this.onRouteChange}/>\n                :\n                this.state.route==='aboutus'?\n                <AboutUs onRouteChange={this.onRouteChange}/>\n                :\n                <div>                      \n                <Logo/>\n                <Home/>  \n                </div>\n              }\n              </div>\n      }\n      \n        </div>   \n      }\n      </div>\n      \n    }\n      </div>\n\n        \n   \n        );\n      }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}